# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Palette:
# (fg:#9A348E)\
# (fg:#DA627D)\
# (fg:#FCA17D)\
# (fg:#86BBD8)\
# (fg:#06969A)\
# (fg:#33658A)\

# Other options:
# $git_commit\
# $git_state\
# $git_metrics\
# $docker_context\
# $nix_shell\
# $memory_usage\
# $sudo\
# $cmd_duration\
# $line_break\
# $jobs\
# $battery\
# $time\
# $status\
# $shell\
# $character\ 

# ÓÉÇ Fire
# ÓÉÖ Small Bits
# ÓÉá Large Bits
# ÓÇ≤ Arrow
# ÓÇ∫ Rising Triangle

format = """
[ÓÇ∫](#33658A)\
$os\
$username\
[ÓÇº](fg:#33658A bg:#06969A)\
$hostname\
[ÓÇº](fg:#06969A bg:#86BBD8)\
$directory\
[ÓÇº](fg:#86BBD8 bg:#FCA17D)\
$julia\
[ÓÇº](fg:#FCA17D bg:#DA627D)\
$python\
[ÓÇº](fg:#DA627D bg:#9A348E)\
$nix_shell\
[ÓÇ∞ ](fg:#9A348E)\
"""
# ÓÉé Lego
# ÓÇ∞ Arrow
# ÓÉÄ Fire
# ÓÉà Ice
# ÓÉå Hexagons!
# ÓÉÜ Big Bits
# ÓÇº Rising Triangle
 
right_format = """
$git_branch\
$git_status\
$quarto\
$container\
$rust\
$scala\
$docker_context\
$cmd_duration\
$time\
"""

# Inserts a blank line between shell prompts
add_newline = false

continuation_prompt = "[¬∑](bright-black) "

# Replace the '‚ùØ' symbol in the prompt with '‚ûú'
[character] # The name of the module we are configuring is 'character'
success_symbol = '[‚ûú](bold #06969A)' 

# Disable the package module, hiding it from the prompt completely
[package]
disabled = true

[os]
format = "[($symbol )]($style)"
style = "(fg:#FCA17D bg: #06969A)"
disabled = false

[username]
style_root = 'fg:bold #FCA17D bg: #33658A' # The style used when the user is root/admin.
# style_user = 'fg:bold #33658A bg:#86BBD8' 
style_user = "fg:bold #06969A bg:#33658A" # The style used for non-root users.
detect_env_vars = [] # Which environment variable(s) should trigger this module.
format = '[ $user ]($style)' # The format for the module.
show_always = true # Always shows the username module.
disabled = false # Disables the username module.
aliases = {} # Translate system usernames to something else.

[hostname]
ssh_only = false  # Only show hostname when connected to an SSH session.
ssh_symbol = 'Ó¨∫' # A format string representing the symbol when connected to SSH session.
trim_at = '.' # String that the hostname is cut off at, after the first match. '.' will stop after the first dot. '' will disable any truncation.
detect_env_vars = []  # Which environment variable(s) should trigger this module.
format = '[ $ssh_symbol$hostname ]($style)' # The format for the module.
style = 'fg:bold #FCA17D bg:#06969A' # The style for the module.
disabled = false  # Disables the hostname module.
aliases = {} # Translate system hostnames to something else. If trim_at is specified, only the first part will be matched and replaced.

[directory]
truncation_length = 4
truncate_to_repo = true
format = '[ $path ]($style)[$read_only]($read_only_style)'
style = 'fg:bold #9A348E bg:#86BBD8'
read_only = 'Ôëñ'
truncation_symbol = 'Û∞áò/'
home_symbol = 'Û±Çµ'
# 
# Wizard's hat: Û±ë∑
[directory.substitutions]
"Everything" = "Û∞ù∏ "
"Everywhere" = "Û∞áà "
"Documents" = "Û∞àô "
"Downloads" = "Û∞âç "
"Music" = "Û±çô "
"Pictures" = "Û∞âè "
"code" = "Û∞≤Ç "
"firefox" = "Óôò "
"nix" = "Ó°É "
".dotfiles" = "Û±óø "

[git_branch]
format = 'on [$symbol$branch(:$remote_branch)]($style) '
symbol = 'Ôêò '
truncation_length = 20
truncation_symbol = 'ùã¢'
style = 'bold #9A348E'
ignore_branches = ['master', 'main']

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )' # The default format for git_status
conflicted = 'Ôêå' # This branch has merge conflicts.
ahead = '‚á°${count}' # The format of ahead
behind = '‚á£${count}' # The format of behind
diverged = 'Ôëø‚á°${ahead_count}‚á£${behind_count}' # The format of diverged
up_to_date = '' # The format of up_to_date
untracked = 'Ó´ù' # The format of untracked
stashed = 'Û∞èñ' # The format of stashed
modified = 'Ó´û' # The format of modified
staged = ' Ó´ú$count ' # The format of staged
renamed = 'Ó´†' # The format of renamed
deleted = ' Ó´ü$count ' # The format of deleted
typechanged = "" # The format of typechanged
style = 'bold #DA627D' # The style for the module.
ignore_submodules = false # gnore changes to submodules.
disabled = false # Disables the git_status module.

[julia]
format = '[ $symbol($version) ]($style)'
version_format = 'v${raw}' # The version format. Available vars are raw, major, minor, & patch
detect_extensions = ['jl'] # Which extensions should trigger this module.
detect_files = ['Project.toml', 'Manifest.toml'] # Which filenames should trigger this module.
symbol = 'Óò§' # A format string representing the symbol of Julia.
style = 'fg:bold #06969A bg:#FCA17D'# The style for the module.
disabled = false # Disables the julia module.

[python]
format = '[ ${symbol} ${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)' # The format for the module.
version_format = 'v${raw}' # The version format. Available vars are raw, major, minor, & patch
symbol = 'ÓòÜ' # A format string representing the symbol of Python
style = 'fg:bold #FCA17D bg:#DA627D' # The style for the module.
python_binary = ['python', 'python3'] # Configures the python binaries that Starship should executes when getting the version.

[nix_shell]
format = '[ $symbol$state(\($name\))]($style)' # The format for the module.
symbol = 'Ó°É ' # A format string representing the symbol of nix-shell.
style = 'fg:bold #86BBD8 bg:#9A348E' # The style for the module.
impure_msg = 'Ó™©' # A format string shown when the shell is impure.
pure_msg = 'Ó™®' # A format string shown when the shell is pure.
unknown_msg = '' # A format string shown when it is unknown if the shell is pure/impure.
disabled = false # Disables the nix_shell module.
heuristic = false # Attempts to detect new nix shell-style shells with a heuristic.

[time]
format = '| [$time]($style) ' # The format string for the module.
use_12hr = false # Enables 12 hour formatting
style = 'bold #FCA17D' # The style for the module time
utc_time_offset = 'local' # Sets the UTC offset to use. Range from -24 < x < 24. Allows floats to accommodate 30/45 minute timezone offsets.
disabled = false # Disables the time module.
time_range = '07:00:00-23:00:00' # Sets the time range during which the module will be shown. Times must be specified in 24-hours format