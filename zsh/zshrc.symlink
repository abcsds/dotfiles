# For testing startup times uncomment next line
# BENCHMARK=1 && zmodload zsh/zprof

# shortcut to this dotfiles path is $DZSH
export DZSH=$HOME/.dotfiles

# Check the OS
export OS="$(uname -s)"

# Linux distro being used
[[ "$OS" == 'Linux' ]] && export DISTRO=$(cat /etc/issue | awk '{print $1}')

# Check if in vconsole
case $(tty) in
  (/dev/tty[1-9]) export CONSOLE='virtual';;
              (*) export CONSOLE='terminal';;
esac

# Set the projects folder
export PROJECTS_FOLDER=~/code

# Set Default Editor
export EDITOR=nvim
export VISUAL=atom

# Set 256 color term
export TERM="xterm-256color"

# Source inputrc
source ~/.inputrc

# Terminal in english
export LC_ALL=C

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# Load '.zsh' files
source $DZSH/zsh/config.zsh
source $DZSH/zsh/prompt.zsh
source $DZSH/zsh/fpath.zsh
source $DZSH/zsh/aliases.zsh
source $DZSH/general/*.zsh

# Alternatively load plugins with antibody
# source $DZSH/zsh/antibody.zsh
# Antibody stopped existing! Temporary solution:
source /usr/share/zsh/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh


# Substring search key bindings
# bind UP and DOWN arrow keys
# zmodload zsh/terminfo
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down

# bind UP and DOWN arrow keys (compatibility fallback
# for Ubuntu 12.04, Fedora 21, and MacOSX 10.9 users)
bindkey "^[[A" history-substring-search-up
bindkey "^[[B" history-substring-search-down

# substring search settings
# HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_FOUND='fg=8'
# HISTORY_SUBSTRING_SEARCH_HIGHLIGHT_NOT_FOUND='fg=1'
# HISTORY_SUBSTRING_SEARCH_GLOBBING_FLAGS='c'
# HISTORY_SUBSTRING_SEARCH_FUZZY='true'


# In order to use this build of zsh as your login shell,
# it must be added to /etc/shells.
# Add the following to your zshrc to access the online help:
# unalias run-help
autoload run-help
HELPDIR=/usr/local/share/zsh/help

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="false"

greeting

if [[ -n "$BENCHMARK" ]]; then
    zprof > "$HOME/.zsh_benchmark"
    # zprof
fi


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/anaconda/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/anaconda/etc/profile.d/conda.sh" ]; then
        . "/opt/anaconda/etc/profile.d/conda.sh"
    else
        export PATH="/opt/anaconda/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

